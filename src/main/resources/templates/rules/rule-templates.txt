[# th:if="${includeHeader}"]
package rules.[(${groupId})];

import kr.co.grib.drools.api.druleManager.dto.RuleFactDto;
import kr.co.grib.drools.api.druleManager.dto.ActionResultDto;
import kr.co.grib.drools.define.RuleStatusCode;
[/]

[# th:each="rule : ${singleRules}" ]
rule "[(${rule.ruleName})]"
when
    $result : ActionResultDto()
    $fact : RuleFactDto(
        deviceId == "[(${rule.deviceId})]",
        functionName == "[(${rule.functionName})]",
        functionValue > [(${rule.functionValue})]
    )
then
    $result.setResult(RuleStatusCode.HIGH.code);
    $result.setAction(RuleStatusCode.HIGH.name);
    $result.setRuleFired("[(${rule.ruleName})]");
    System.out.println("Rule fired: [(${rule.ruleName})]");
end

[/]

[# th:each="rule : ${andRules}" ]
rule "[(${rule.ruleName})]"
when
    $result : ActionResultDto()
    $fact : RuleFactDto(
        deviceId == "[(${rule.deviceId})]",
        functionName == "[(${rule.functionName})]",
        functionValue >= [(${rule.minValue})] && functionValue <= [(${rule.maxValue})]
    )
then
    $result.setResult(RuleStatusCode.NORMAL.code);
    $result.setAction(RuleStatusCode.NORMAL.name);
    $result.setRuleFired("[(${rule.ruleName})]");
    System.out.println("Rule fired: [(${rule.ruleName})]");
end

[/]

[# th:each="rule : ${orRules}" ]
rule "[(${rule.ruleName})]"
when
    $result : ActionResultDto()
    $fact : RuleFactDto(
        [# th:each="cond, stat : ${rule.conditions}" ]
            (deviceId == "[(${cond.deviceId})]" && functionName == "[(${cond.functionName})]" && functionValue > [(${cond.functionValue})])[(${stat.last} ? '' : ' ||')]
        [/]
    )
then
    $result.setResult(RuleStatusCode.HIGH.code);
    $result.setAction(RuleStatusCode.HIGH.name);
    $result.setRuleFired("[(${rule.ruleName})]");
    System.out.println("Rule fired: [(${rule.ruleName})]");
end
[/]
